---
import DynamicIcon from "@/helpers/DynamicIcon";
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import CustomButton from "../CustomButton.astro";
import CustomHeading from "../CustomHeading.astro";
import ImageMod from "../ImageMod.astro";

type Props = { services: CollectionEntry<"about">["data"]["services"] };

const { services } = Astro.props;
---

{
  services.map((v, i: number) => (
    <section class="section max-md:py-6 lg:pt-0">
      <div class="container">

        <div class="row gy-3 justify-center md:justify-between items-center">

          <!-- Dynamic device switch: hidden for tailwindcss sizes lg and greater -->
          {v.subtitle && (
            <p
              class="text-primary text-balance text-center md:text-left lg:hidden text-base-sm"
              set:html={markdownify(v.subtitle)}
              data-aos="fade-up-sm"
            />
          )}
          {v.title && (
            <CustomHeading
              as="h2"
              text={v.title}
              class="text-h3-sm lg:text-h2-sm text-balance text-center md:text-left lg:hidden"
              dataAos="fade-up-sm"
              dataAosDelay="60"
            />
          )}
          <!-- End Switch -->

          <div class={`col-12 md:col-6 md:w-[44%] ${i % 2 !== 0 ? "lg:order-2 lg:order-1" : ""}`}>
            <div class="relative">
              <ImageMod
                class="rounded-lg mx-auto w-full aspect-square"
                src={v.image!}
                alt="first section image"
                width={570}
                height={585}
                data_aos="fade-right-sm"
              />
              <!-- TODO: reconsider overlay -->
              <!-- {v.overlay_image && ( -->
              <!--   <ImageMod -->
              <!--     class="rounded-lg absolute bottom-6 right-6 w-2/5" -->
              <!--     src={v.overlay_image} -->
              <!--     alt="first section image" -->
              <!--     width={268} -->
              <!--     height={161} -->
              <!--     data_aos="fade-right-sm" -->
              <!--     data_aos_delay="30" -->
              <!--   /> -->
              <!-- )} -->
            </div>
          </div>

          <div class={`col-12 md:col-6 md:w-[53%] xl:w-[42%] ${i % 2 === 0 ? "lg:order-1 lg:order-2" : ""}`}>

            <!-- Dynamic device switch: hidden for tailwindcss sizes up to md -->
            {v.subtitle && (
              <p
                class="text-primary text-balance text-center md:text-left text-base-sm mb-6 max-md:hidden"
                set:html={markdownify(v.subtitle)}
                data-aos="fade-up-sm"
              />
            )}
            {v.title && (
              <CustomHeading
                as="h2"
                text={v.title}
                class="text-h3-sm lg:text-h2-sm text-balance mb-6 text-center md:text-left max-md:hidden"
                dataAos="fade-up-sm"
                dataAosDelay="60"
              />
            )}
            <!-- End switch -->

            {v.content && (
              <p
                class="mb-10 text-balance text-center md:text-left"
                set:html={markdownify(v.content)}
                data-aos="fade-up-sm"
                data-aos-delay="90"
              />
            )}

            <!-- TODO: consider bullet points -->
            {v.bullet_points && (
              <ul class="mt-10 lg:mt-16">
                {v.bullet_points.map((p: string, i: number) => (
                  <li
                    class="mb-3.5 flex! items-center! justify-center md:justify-start"
                    data-aos="fade-up-sm"
                    data-aos-delay={50 + i * 50}>
                    <div class="bg-primary h-fit p-1 rounded-full mr-2">
                      <DynamicIcon
                        icon="FaCheck"
                        className="text-white text-xs"
                      />
                    </div>
                    <span set:html={markdownify(p)} class="font-medium" />
                  </li>
                ))}
              </ul>
            )}

            <!-- TODO: consider button (maybe only for some) -->
            {v.button?.enable && (
              <div
                class="flex flex-col md:flex-row justify-center lg:justify-start items-center gap-4"
                data-aos="fade-up-sm"
                data-aos-delay="120">
                <CustomButton
                  className="w-fit"
                  link={v.button.link}
                  label={v.button.label}
                  variant="secondary"
                  icon={v.button.icon}
                />
              </div>
            )}
          </div>
        </div>
      </div>
    </section>
  ))
}
